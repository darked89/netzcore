
TODO:

- fflow & nw & nb runs for goh -> update bo report

- proofchecking netween & fflow with their data

- comparison with other methods in the literature (with their data)
    - FunctionalFlow functional annotation (use scoreN with acc to initial scores option)
    - MetaCore topological score using shortest paths on psoriasis data
    - InfoFlow, lethality data on S. cervaise

- ml predictions based on feature described network (need to use the same training & test sets)

- aneurysm & breast cancer gene data from Osrisv2

- disease data from goh

- ppi network from jonsson 

- cancer data from futreal

- runs for possibly AES 

- modify netzcore for consequitive runs

- comparison of net* methods within pathologies on the effect of scoring & on the effect of different networks

- comparison of fflow with netzcore (with accumulateToInitialScores option)

- comparison of co-expression for correlation
    - Gemma
    - coexp network from stuart03
    - coexp network from 
    - from tissueinfo or p-values from HEFalMp with scores

- runs for possibly Hefalmp & OMIM data

- comparison of ppis from different species

- GO analysis on the high scoring nodes

- check performance on random seed assignment 

- document all

- filtering by localization (localization data from locate) (files from uri)

- incorporating additional info (active subnetwork discovery, structural info, etc)


NOTES:

- ns r2i3, r3i3, nz i5, n1 r3i3, nh r3i3, nd, nb i5 check 18 new protein scores & select high scoring proteins and GO analysis

- runs on different networks (with diferent reliabilities) with different disease assoc. data and paramters and analysis
    - scoring
	- netshort
	- netrank
	- netrandom
	- netscore
	- netzcore
	- netz1core
	- netzscore
	- fflow
	- netZscoreExp
	- netween
    - ppi
	- biana
	- goh
	- rhodes
    - reliability from (only for biana)
	- pubmed
	- method
	- jaccard
	- clust. coef.
	- ? iterative jaccard
    - edge relevance 
	- string 
	    - co-expression
	    - co-localization (should be in realiability?)
	    - all
	    - ? gene neighborhood / fusion / text mining / db
    - disease association
	- aneurysm (168, genesymbol))
	- aes (uniprotaccession)
	    - apoptosis (430)
	    - inflamation (584)
	    - anorexia (124)
	- hefalmp (genesymbol)
	    - alzheimer (862)
	    - breast cancer (239)
	- omim morbidmap
	    - breast cancer
	    - alzheimer
	- phenogo
	    - breast cancer
	    - alzheimer


- nz sucks when self score is assigned in case of 0 division (due to 0 variance), changed to assign inf/-inf. z-scoring in netzcore is contraversial, since it compares scores coming from different distributions (local neighborhood for each node), now assigning scores based on global distribution of neighboring scores.

- runs on 3 ppi with aneurysm data for preliminary analysis of programs & parameters. Performances do not vary a lot with respect to network. NetShort gives promising results. NetScore and NetZcore is comparable. Furthermore, NetZcore i4,i5,i6 can make a lot of difference since it is sort-of-random whereas performance of NetScore is more stable (i.e. r1i3 vs r2i3 or r3i2)

- Using random subsets of non-seed nodes to get negative score values (for calculating FP/TN). Was using subsets of 10 non-seeds, consequitive runs vary largely, now sampling usibng all non-seeds (N_nonseed / N_seed non_seeds are averaged for each non-negative fold)

- filtered networks with reliability scores (detection method + pubmed > 2) (can also use edge other attributes: pubmed, method, string coexpression/colocalization, jaccard, clustering coefficient)

- edge relevance scores coming from string (all vs only co-expression vs exp and db) (more data from tissue info / HEFalMp?) seem to not to improve performance

- using 0.00001 vs 0.01 as default non seed score reduced nz i5 performance on no_tap lcc by 4,5%

- performance with all initial network (not the largest connected component) is ~10% better than lcc ?-> small cc of 6,5,4,3,2 has quite good performances (e.g. all of these proteins in these cc's are associated - need to check)

- checked performance of ori's networks using gaudi: no significan difference using only network / network with coexp / network with coloc but 5% increase when using coexp + coloc also checked 1e-2 vs 1e-5 which yields only about 1% difference.

- checked how seeds are connected with each other (linker degree distribution and ratios of seeds), (see anaylze_network.r generated graphs) for biana_no_tap_no_reliability (ld>10/11 and rld2 > 60/65 % seems well seperator for some of the seeds

- Some old runs are with non-replicable data, therefore there is a performance difference. This emphasises the issue of the selection of negative.

- modify netzcore, netscore, netlink to adjust self edges and check performance change -> netzcore for biana no tap no reliability has 1.5% performance loss -> for now skiping all self edges

- adjusted confidence interval, (ROCR arised problems with adding fscore) to analyze_results.r script

- Tested linker degree (majority voting) with 1,2,5,10,11 as well as %20 %50 performance -> due to the nature of evaluation netlink t5 reversed achieves quite high performance -> is this due to negative score calculation? t1 is slightly better than random 

- Performance when no random non-seed selection is applied  (all negatives are included) is 15% better, this could be a more plausible option for demonstrating results however the PPV is devastatingly terrible.

- Performance of leave-one-out xval is not very different from 5 xval (1% less than xval5).

- Checked netrank with different pagerank iteration and without initial scores. Initial scores boosted performance (slightly in 20 iterations, a lot in 2 iterations) for goh network on alzheimer data with ~13 seeds (this is not significant, it has high variation). 20 is selected as the number of pagerank iterations and initial scores are used by default.

- runs for david's network: less number of seeds are fragile for performance comparision having very high variances, ns and nd seems to perform ok.

- Checked netscore r-i variation on goh network with aneurysm data. Performances are as follows r1i2 68, r1i3 68.9, r1i4 73, r2i2 74, r2i3 75.2, r2i4 80.1, r3i2 72, r3i3 76.2, r3i4 57.1. r2i3 may be used by default.


aneurysim

* biana
** ns
*** r2i2 75.2
*** r2i3 77.1
*** r3i2 73.7
*** r3i3 76.8
*** r4i2 73.5
*** r4i3 76.5
** nd 75.3
** nz i5 73.8
** nr 55.6

* goh
** ns
*** r2i2 74.8
*** r2i3 75.6
*** r3i2 73.0
*** r3i3 76.6
*** r4i2 73.2
*** r4i3 76.1
** nd 77.5
** nz i5 74.7
** nr 55.0

* rhodes
** ns
*** r2i2 75.8
*** r2i3 75.4
*** r3i2 77.5
*** r3i3 73.4
*** r4i2 75.4 
*** r4i3 72.8
** nd 76.0
** nz i5 74.3
** nr 49.8



